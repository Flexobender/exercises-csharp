---
name: Арифметические операции
theory: |
  На базовом уровне компьютеры оперируют только числами. Даже в прикладных программах на высокоуровневых языках внутри много чисел и операций над ними. К счастью, для старта достаточно знать обычную арифметику — с нее и начнем.

  Для сложения двух чисел в математике мы пишем, например, *3 + 4*. В программировании — то же самое. Вот программа, складывающая два числа:

  ```cs
  // Не забываем точку с запятой в конце,
  // так как каждая строчка в коде - инструкция
  3 + 4;
  ```

  Если запустить эту программу на выполнение, то она тихо отработает и завершится. На экран ничего не будет выведено. Операция сложения, как и остальные операции, сама по себе ничего не делает кроме сложения. Чтобы воспользоваться результатом сложения, его нужно, например, вывести на экран.

  ```cs
  Console.WriteLine(3 + 4);
  ```

  После запуска на экране появится результат:

  <pre class='hexlet-basics-output'>7</pre>

  Кроме сложения доступны следующие операции:

  * `*` — умножение
  * `/` — деление
  * `-` — вычитание
  * `%` — [остаток от деления](https://ru.wikipedia.org/wiki/Деление_с_остатком)

  Теперь давайте выведем на экран результат деления, а потом результат возведения в степень:

  ```cs
  Console.WriteLine(8 / 2);
  Console.WriteLine(3 * 3 * 3);
  ```

  <pre class='hexlet-basics-output'>
  4
  27
  </pre>

instructions: |

  Выведите на экран результат деления числа *81* на *9*.

tips:
  - |
    Всегда отбивайте арифметические операторы пробелами от самих чисел (операндов) – это хороший стиль программирования. Поэтому в наших примерах `Console.WriteLine(3 + 4)`, а не `Console.WriteLine(3+4)`.
  - |
    Остаток от деления отбрасывается с округлением вниз. Таким образом результат деления – всегда целое число. Как работать с вещественными числами будет показано в следующих уроках.
